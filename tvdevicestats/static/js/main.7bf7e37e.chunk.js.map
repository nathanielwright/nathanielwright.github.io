{"version":3,"sources":["drm/const.js","drm/drm.js","drm/defaulteme.js","drm/webkiteme.js","drm/mseme.js","memory.js","index.js"],"names":["EMEs","keySystems","widevine","playready","clearkey","fairplay","primetime","dashconfig","initDataTypes","audioCapabilities","contentType","videoCapabilities","EME","drmConstantClass","className","map","name","React","Component","DRMType","id","this","props","keySystem","DRMKeySystem","Object","keys","key","subKey","DRMSubType","state","colour","setSubSystem","bind","status","changeColour","callback","subSystem","config","constants","window","navigator","requestMediaKeySystemAccess","then","keySystemAccess","catch","err","testVideoElement","document","createElement","webkitGenerateKeyRequest","canPlayType","webkitEme","MSMediaKeys","isTypeSupported","msEme","setState","style","color","Memory","remaining","deviceMemory","allocated","allocationindex","blockSize","memalloc","stopAt","toString","arr","i","push","obj","bytes","sizeOf","undefined","length","objClass","prototype","call","slice","hasOwnProperty","console","log","formatByteSize","memorySizeOf","addElement","clearInterval","interval","setInterval","tick","memory","getMemory","MemTest","allocatedString","toFixed","remainingString","DeviceStats","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7bf7e37e.chunk.js","sourcesContent":["export const EMEs = [\"Default EME\", \"MS EME\", \"Webkit EME\"];\n\n\nexport const keySystems = {\n    widevine: ['com.widevine.alpha'],\n    playready: ['com.microsoft.playready', 'com.youtube.playready'],\n    clearkey: ['webkit-org.w3.clearkey', 'org.w3.clearkey'],\n    fairplay: ['com.apple.fps.2_0', 'com.apple.fps.1_0'],\n    primetime: ['com.adobe.primetime', 'com.adobe.access'],\n    };\n\n\nexport const dashconfig = [{\n    initDataTypes: ['cenc'],\n    audioCapabilities: [{\n        contentType: 'audio/mp4;codecs=\"mp4a.40.2\"'\n    }],\n    videoCapabilities: [{\n        contentType: 'video/mp4;codecs=\"avc1.42E01E\"'\n    }]\n}];\n","import React from 'react';\n\nimport * as drmConstantClass from './const.js'\nimport * as defaultEme from './defaulteme.js'\nimport * as webkitEme from './webkiteme.js'\nimport * as msEme from './mseme.js'\nimport * as constants from './const.js'\n\n// EME is the primary EME e.g. MS, EME, WebKit\nexport class EME extends React.Component {\n    render() {\n        const EMEs = drmConstantClass.EMEs\n        return (\n            <div className=\"EME\" key=\"EME\">\n                {EMEs.map((name) => (\n                <DRMType EME={name} key={name}/>\n            ))}\n            </div>\n        )\n    }\n}\n\nclass DRMType extends React.Component {\n    render() {\n\n        return (\n           <div className=\"DRMKeySystem\" \n            id={this.props.keySystem}\n            key={this.props.EME + \"-\" + this.props.keySystem}>{this.props.EME}\n           <DRMKeySystem EME={this.props.EME}/>\n           </div>\n        )\n    }\n}\n\nclass DRMKeySystem extends React.Component {\n    render() {\n        const keySystems = drmConstantClass.keySystems\n        return (\n            <div>\n            {Object.keys(keySystems).map((key) => {\n                return (\n                    <div id={key} key={this.props.EME+\"-\" +key}>\n                    {keySystems[key].map((subKey) => (\n                        <DRMSubType EME={this.props.EME} subKey={subKey}  key={this.props.EME + \"-\" + key + \"-\"+ subKey}/>\n                    ))}\n                    </div>\n                )\n            })}\n            </div>\n        )\n    }\n}\n\n\n// DRMSubType such as org.widevine.alpha\nclass DRMSubType extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colour: 'black',\n        };\n        this.setSubSystem = this.setSubSystem.bind(this);\n    }\n\n    setSubSystem(status) {\n        var colour\n        (status) ? colour = 'green' : colour = 'red';\n        this.changeColour(colour)\n    }\n\n    componentDidMount() {\n        if (this.props.EME===\"Default EME\") {\n         defaultEme.checkKeySystem(this.setSubSystem, this.props.EME, this.props.subKey, constants.dashconfig)\n        }\n        if (this.props.EME === \"Webkit EME\") {\n            webkitEme.checkKeySystem(this.setSubSystem, this.props.EME, this.props.subKey, 'video/mp4') \n        }\n        if (this.props.EME === \"MS EME\") {\n            msEme.checkKeySystem(this.setSubSystem, this.props.EME, this.props.subKey)\n        }\n    }        \n \n    changeColour(colour) {\n        this.setState({colour: colour})\n    }\n\n    render() {\n        return (\n            <span id={this.props.subKey} className=\"drmSubKey\"\n             style={{color: this.state.colour}}>{this.props.subKey}</span>\n        )\n    }\n}","\nexport function checkKeySystem(callback, EME, subSystem, config) {\n\n    if (!window.navigator.requestMediaKeySystemAccess) { callback(false); return  }\n    window.navigator.requestMediaKeySystemAccess(subSystem, config).then (function (keySystemAccess){\n        callback(true)\n    }).catch (function(err) {\n        callback(false)\n    })\n}\n\n","export function checkKeySystem(callback, EME, subSystem, config) {\n    var testVideoElement = document.createElement('video');\n    if (typeof testVideoElement.webkitGenerateKeyRequest === 'function') {\n        if(testVideoElement.canPlayType(config, subSystem)) {\n            callback(true)\n            return\n        }\n    } \n    callback(false) \n}","export function checkKeySystem(callback, EME, subSystem) {\n    if (typeof window.MSMediaKeys === 'function') {\n        if (window.MSMediaKeys.isTypeSupported(subSystem)) {\n            callback(true);\n            return;\n        }\n    }\n    callback(false)\n\n}","import React from 'react';\n\nexport class Memory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            remaining: navigator.deviceMemory * 1024,\n            allocated: 0,\n            allocationindex: 0,\n        };\n        this.blockSize = 0;\n        this.memalloc = []\n        this.stopAt = 512;\n    }\n    getMemory() {\n        return (navigator.deviceMemory * 1024).toString() + \" MB\"\n    }\n\n\n    addElement() {\n        let arr = []\n        for (var i=0;i<1000;i++) {\n            arr.push(i/10)\n        }\n        \n        if(this.blockSize===0) {\n            this.blockSize = memorySizeOf(arr)\n        }\n        this.memalloc[this.state.allocationindex] = arr\n    }\n\n    tick() {\n        this.addElement()\n        this.setState(state => ({\n            allocated: state.allocated + this.blockSize,\n            remaining: state.remaining - this.blockSize,\n            allocationindex: state.allocationindex + 1,\n        }))\n        if (this.state.remaining < this.blockSize || this.state.allocated > this.stopAt) { clearInterval(this.interval) }\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 5);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        var memory = this.getMemory();\n        return (\n            <div className=\"MemoryStat\">Memory: {memory}\n                 <MemTest allocated={this.state.allocated} remaining={this.state.remaining}/></div>\n       \n        )\n    }\n}\n\n\nconst MemTest = ({allocated, remaining}) => {\n    var allocatedString = allocated.toFixed(3)\n    var remainingString = remaining.toFixed(3)\n    return (\n        <div>\n        <span className=\"memtest\">Allocated: {allocatedString}MB Estimated Remaining: {remainingString}MB\n        </span>\n        </div>\n    )\n    \n}\n\n// https://gist.github.com/zensh/4975495\nfunction memorySizeOf(obj) {\n    var bytes = 0;\n\n    function sizeOf(obj) {\n        if(obj !== null && obj !== undefined) {\n            switch(typeof obj) {\n            case 'number':\n                bytes += 8;\n                break;\n            case 'string':\n                bytes += obj.length * 2;\n                break;\n            case 'boolean':\n                bytes += 4;\n                break;\n            case 'object':\n                var objClass = Object.prototype.toString.call(obj).slice(8, -1);\n                if(objClass === 'Object' || objClass === 'Array') {\n                    for(var key in obj) {\n                        if(!obj.hasOwnProperty(key)) continue;\n                        sizeOf(obj[key]);\n                    }\n                } else bytes += obj.toString().length * 2;\n                break;\n            default:\n                console.log(\"Unhandled type: \" + typeof obj)\n            }\n        }\n        return bytes;\n    };\n\n    function formatByteSize(bytes) {\n        return (bytes / 1024 / 1024)\n    };\n\n    return formatByteSize(sizeOf(obj));\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {EME} from './drm/drm.js';\nimport {Memory} from './memory.js';\nimport './devicestats.css';\n\n\n\nclass DeviceStats extends React.Component {\n\n    render() {\n        return (\n            <div className=\"DeviceStats\">\n                <EME />\n                <Memory />\n            </div>\n        )\n    }\n}\n\n\nReactDOM.render(\n    <DeviceStats />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}