{"version":3,"sources":["drm/const.js","drm/playready.js","drm/drm.js","drm/defaulteme.js","drm/webkiteme.js","drm/mseme.js","memory.js","index.js"],"names":["EMEs","keySystems","widevine","playready","clearkey","fairplay","primetime","dashconfig","initDataTypes","audioCapabilities","contentType","videoCapabilities","PlayReady","autoplay","controls","id","style","src","type","document","getElementById","innerHTML","message","React","Component","EME","drmConstantClass","className","map","name","DRMType","this","props","keySystem","DRMKeySystem","Object","keys","key","subKey","DRMSubType","state","colour","setSubSystem","bind","status","changeColour","callback","subSystem","config","constants","window","navigator","requestMediaKeySystemAccess","then","keySystemAccess","catch","err","testVideoElement","createElement","webkitGenerateKeyRequest","canPlayType","webkitEme","MSMediaKeys","isTypeSupported","msEme","setState","color","Memory","remaining","deviceMemory","allocated","allocationindex","blockSize","memalloc","stopAt","toString","arr","i","push","obj","bytes","sizeOf","undefined","length","objClass","prototype","call","slice","hasOwnProperty","console","log","formatByteSize","memorySizeOf","addElement","clearInterval","interval","setInterval","tick","memory","getMemory","MemTest","allocatedString","toFixed","remainingString","DeviceStats","ReactDOM","render"],"mappings":"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","file":"static/js/main.e861903a.chunk.js","sourcesContent":["export const EMEs = [\"Default EME\", \"MS EME\", \"Webkit EME\"];\n\n\nexport const keySystems = {\n    widevine: ['com.widevine.alpha'],\n    playready: ['com.microsoft.playready', 'com.youtube.playready'],\n    clearkey: ['webkit-org.w3.clearkey', 'org.w3.clearkey'],\n    fairplay: ['com.apple.fps.2_0', 'com.apple.fps.1_0'],\n    primetime: ['com.adobe.primetime', 'com.adobe.access'],\n    };\n\n\nexport const dashconfig = [{\n    initDataTypes: ['cenc'],\n    audioCapabilities: [{\n        contentType: 'audio/mp4;codecs=\"mp4a.40.2\"'\n    }],\n    videoCapabilities: [{\n        contentType: 'video/mp4;codecs=\"avc1.42E01E\"'\n    }]\n}];\n","import React from 'react';\n\n\nexport class PlayReady extends React.Component {\n    \n\n    render() {\n        let err = \"\"\n        return (\n            <div>\n            <video autoplay controls id=\"player\" style=\"width: 100%\">\n                <source src=\"./public/LicenseAcquisition.xml\" type=\"application/vnd.ms-playready.initiator+xml\"/>\n            </video>\n            <script>\n                var video=document.getElementById('player');\n                video.onerror = function(err) {\n                    document.getElementById(\"error\").innerHTML = err.message\n                }\n                video.onloadstart = function () {\n                    document.getElementById(\"error\").innerHTML = \"onloadstart\"\n                }\n                video.onprogress = function() { \n                    document.getElementById(\"error\".innerHTML = \"progress\")}\n            </script>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport * as drmConstantClass from './const.js'\nimport * as defaultEme from './defaulteme.js'\nimport * as webkitEme from './webkiteme.js'\nimport * as msEme from './mseme.js'\nimport * as constants from './const.js'\nimport * as PlayReady from './playready.js'\n\n// EME is the primary EME e.g. MS, EME, WebKit\nexport class EME extends React.Component {\n    render() {\n        const EMEs = drmConstantClass.EMEs\n        return (\n            <div className=\"EME\" key=\"EME\">\n                {EMEs.map((name) => (\n                <DRMType EME={name} key={name}/>\n            ))}\n            <PlayReady/>\n            </div>\n        )\n    }\n}\n\nclass DRMType extends React.Component {\n    render() {\n\n        return (\n           <div className=\"DRMKeySystem\" \n            id={this.props.keySystem}\n            key={this.props.EME + \"-\" + this.props.keySystem}>{this.props.EME}\n           <DRMKeySystem EME={this.props.EME}/>\n           </div>\n        )\n    }\n}\n\nclass DRMKeySystem extends React.Component {\n    render() {\n        const keySystems = drmConstantClass.keySystems\n        return (\n            <div>\n            {Object.keys(keySystems).map((key) => {\n                return (\n                    <div id={key} key={this.props.EME+\"-\" +key}>\n                    {keySystems[key].map((subKey) => (\n                        <DRMSubType EME={this.props.EME} subKey={subKey}  key={this.props.EME + \"-\" + key + \"-\"+ subKey}/>\n                    ))}\n                    </div>\n                )\n            })}\n            </div>\n        )\n    }\n}\n\n\n// DRMSubType such as org.widevine.alpha\nclass DRMSubType extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colour: 'black',\n        };\n        this.setSubSystem = this.setSubSystem.bind(this);\n    }\n\n    setSubSystem(status) {\n        var colour\n        (status) ? colour = 'green' : colour = 'red';\n        this.changeColour(colour)\n    }\n\n    componentDidMount() {\n        if (this.props.EME===\"Default EME\") {\n         defaultEme.checkKeySystem(this.setSubSystem, this.props.EME, this.props.subKey, constants.dashconfig)\n        }\n        if (this.props.EME === \"Webkit EME\") {\n            webkitEme.checkKeySystem(this.setSubSystem, this.props.EME, this.props.subKey, 'video/mp4') \n        }\n        if (this.props.EME === \"MS EME\") {\n            msEme.checkKeySystem(this.setSubSystem, this.props.EME, this.props.subKey)\n        }\n    }        \n \n    changeColour(colour) {\n        this.setState({colour: colour})\n    }\n\n    render() {\n        return (\n            <span id={this.props.subKey} className=\"drmSubKey\"\n             style={{color: this.state.colour}}>{this.props.subKey}</span>\n        )\n    }\n}","\nexport function checkKeySystem(callback, EME, subSystem, config) {\n\n    if (!window.navigator.requestMediaKeySystemAccess) { callback(false); return  }\n    window.navigator.requestMediaKeySystemAccess(subSystem, config).then (function (keySystemAccess){\n        callback(true)\n    }).catch (function(err) {\n        callback(false)\n    })\n}\n\n","export function checkKeySystem(callback, EME, subSystem, config) {\n    var testVideoElement = document.createElement('video');\n    if (typeof testVideoElement.webkitGenerateKeyRequest === 'function') {\n        if(testVideoElement.canPlayType(config, subSystem)) {\n            callback(true)\n            return\n        }\n    } \n    callback(false) \n}","export function checkKeySystem(callback, EME, subSystem) {\n    if (typeof window.MSMediaKeys === 'function') {\n        if (window.MSMediaKeys.isTypeSupported(subSystem)) {\n            callback(true);\n            return;\n        }\n    }\n    callback(false)\n\n}","import React from 'react';\n\nexport class Memory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            remaining: navigator.deviceMemory * 1024,\n            allocated: 0,\n            allocationindex: 0,\n        };\n        this.blockSize = 0;\n        this.memalloc = []\n        this.stopAt = 512;\n    }\n    getMemory() {\n        return (navigator.deviceMemory * 1024).toString() + \" MB\"\n    }\n\n\n    addElement() {\n        let arr = []\n        for (var i=0;i<1000;i++) {\n            arr.push(i/10)\n        }\n        \n        if(this.blockSize===0) {\n            this.blockSize = memorySizeOf(arr)\n        }\n        this.memalloc[this.state.allocationindex] = arr\n    }\n\n    tick() {\n        this.addElement()\n        this.setState(state => ({\n            allocated: state.allocated + this.blockSize,\n            remaining: state.remaining - this.blockSize,\n            allocationindex: state.allocationindex + 1,\n        }))\n        if (this.state.remaining < this.blockSize || this.state.allocated > this.stopAt) { clearInterval(this.interval) }\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 5);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        var memory = this.getMemory();\n        return (\n            <div className=\"MemoryStat\">Memory: {memory}\n                 <MemTest allocated={this.state.allocated} remaining={this.state.remaining}/></div>\n       \n        )\n    }\n}\n\n\nconst MemTest = ({allocated, remaining}) => {\n    var allocatedString = allocated.toFixed(3)\n    var remainingString = remaining.toFixed(3)\n    return (\n        <div>\n        <span className=\"memtest\">Allocated: {allocatedString}MB Estimated Remaining: {remainingString}MB\n        </span>\n        </div>\n    )\n    \n}\n\n// https://gist.github.com/zensh/4975495\nfunction memorySizeOf(obj) {\n    var bytes = 0;\n\n    function sizeOf(obj) {\n        if(obj !== null && obj !== undefined) {\n            switch(typeof obj) {\n            case 'number':\n                bytes += 8;\n                break;\n            case 'string':\n                bytes += obj.length * 2;\n                break;\n            case 'boolean':\n                bytes += 4;\n                break;\n            case 'object':\n                var objClass = Object.prototype.toString.call(obj).slice(8, -1);\n                if(objClass === 'Object' || objClass === 'Array') {\n                    for(var key in obj) {\n                        if(!obj.hasOwnProperty(key)) continue;\n                        sizeOf(obj[key]);\n                    }\n                } else bytes += obj.toString().length * 2;\n                break;\n            default:\n                console.log(\"Unhandled type: \" + typeof obj)\n            }\n        }\n        return bytes;\n    };\n\n    function formatByteSize(bytes) {\n        return (bytes / 1024 / 1024)\n    };\n\n    return formatByteSize(sizeOf(obj));\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {EME} from './drm/drm.js';\nimport {Memory} from './memory.js';\nimport './devicestats.css';\n\n\n\nclass DeviceStats extends React.Component {\n\n    render() {\n        return (\n            <div className=\"DeviceStats\">\n                <EME />\n                <Memory />\n            </div>\n        )\n    }\n}\n\n\nReactDOM.render(\n    <DeviceStats />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}